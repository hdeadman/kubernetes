name: Windows Pause Workflow
on:
  push:
    branches:
    - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "${{ github.repository }}-windows-pause"

jobs:
  cross-compile-windows:
    runs-on: ubuntu-latest
    name: Cross Compile Windows
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build Pause and Wincat
      run: |
        cd build/pause
        make build OS=windows
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-pause-container-binaries
        path: |
          build/pause/bin

  build-containers:
    needs: [cross-compile-windows]
    runs-on: windows-2019
    name: Build Containers
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Setup Msys2
      uses: msys2/setup-msys2@v2
      with:
        update: false
        path-type: inherit
        release: false
    - run: git config --global core.autocrlf input
    - name: Checkout
      uses: actions/checkout@v4
    - name: Download build artifacts from cross compile
      uses: actions/download-artifact@v4
      with:
        name: windows-pause-container-binaries
        path: |
          build/pause/bin
    - name: Docker Build
      id: docker_build
      run: |
        ls
        docker build -f build/pause/Dockerfile_windows --build-arg BASE=mcr.microsoft.com/windows/nanoserver:ltsc2019 --build-arg ARCH=amd64 build/pause --tag ${{ env.IMAGE_NAME }}
        docker tag ${{ env.IMAGE_NAME }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        echo "digest=$(docker inspect --format='{{index .Id }}' ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }})" >> "$GITHUB_OUTPUT"
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
#    - name: Log in to Docker Hub
#      uses: docker/login-action@v3
#      with:
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    - name: Docker Push
      run: |
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        #docker push ${{ env.IMAGE_NAME }}
    - name: Debug Outputs
      env:
        OUTPUTS: ${{ toJSON(steps.docker_build.outputs) }}
      run: echo "$OUTPUTS"
      shell: bash
    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.docker_build.outputs.digest }}
        push-to-registry: true