name: CI Workflow
on:
  push:
    branches:
    - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  cross-compile-windows:
    runs-on: ubuntu-latest
    name: Cross Compile Windows
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build Pause and Wincat
      run: |
        cd build/pause
        make build OS=windows
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-pause-container-binaries
        path: |
          build/pause/bin

  build-containers:
    needs: [cross-compile-windows]
    runs-on: windows-2019
    name: Build Containers
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Setup Msys2
      uses: msys2/setup-msys2@v2
      with:
        update: false
        path-type: inherit
        release: false
    - run: git config --global core.autocrlf input
    - name: Checkout
      uses: actions/checkout@v4
    - name: Download build artifacts from cross compile
      uses: actions/download-artifact@v4
      with:
        name: windows-pause-container-binaries
        path: |
          build/pause/bin
    - name: Docker Build
      run: |
        ls
        docker build -f build/pause/Dockerfile_windows --build-arg BASE=mcr.microsoft.com/windows/nanoserver:ltsc2019 --build-arg ARCH=amd64 build/pause
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true